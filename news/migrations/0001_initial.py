# Generated by Django 4.2 on 2025-05-05 07:05

from django.conf import settings
import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_ckeditor_5.fields
import imagekit.models.fields
import news.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(5)])),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('content', django_ckeditor_5.fields.CKEditor5Field()),
                ('excerpt', models.TextField(blank=True, max_length=500)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('featured_image', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to=news.models.article_image_path)),
                ('featured_image_caption', models.CharField(blank=True, max_length=200)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('audio_url', models.URLField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'Under Review'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=10)),
                ('content_type', models.CharField(choices=[('article', 'Standard Article'), ('news', 'News Report'), ('interview', 'Interview'), ('opinion', 'Opinion Piece'), ('feature', 'Feature Story')], default='article', max_length=10)),
                ('is_breaking', models.BooleanField(default=False)),
                ('is_trending', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_sponsored', models.BooleanField(default=False)),
                ('allow_comments', models.BooleanField(default=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('shares', models.PositiveIntegerField(default=0)),
                ('reading_time', models.PositiveSmallIntegerField(default=5, help_text='Estimated reading time in minutes')),
                ('meta_title', models.CharField(blank=True, max_length=100)),
                ('meta_description', models.CharField(blank=True, max_length=200)),
                ('canonical_url', models.URLField(blank=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-published_at', '-created_at'],
                'permissions': [('can_publish', 'Can publish articles'), ('can_feature', 'Can feature articles'), ('can_mark_breaking', 'Can mark articles as breaking news')],
            },
        ),
        migrations.CreateModel(
            name='ArticleView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.CharField(blank=True, max_length=200)),
                ('referrer', models.URLField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session_key', models.CharField(blank=True, max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='category_images/')),
                ('meta_title', models.CharField(blank=True, max_length=100)),
                ('meta_description', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(validators=[django.core.validators.MinLengthValidator(10)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_flagged', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'ordering': ['created_at'],
                'permissions': [('can_moderate', 'Can moderate comments')],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Journalist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', django_ckeditor_5.fields.CKEditor5Field(blank=True)),
                ('profile_picture', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to=news.models.journalist_profile_path)),
                ('twitter_handle', models.CharField(blank=True, max_length=100)),
                ('linkedin_url', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('expertise', models.CharField(blank=True, max_length=200)),
                ('joined_date', models.DateField(auto_now_add=True)),
                ('awards', models.TextField(blank=True)),
                ('seo_title', models.CharField(blank=True, max_length=100)),
                ('seo_description', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'ordering': ['user__last_name', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='article_media/%Y/%m/')),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('document', 'Document')], max_length=20)),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('credit', models.CharField(blank=True, max_length=100)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('alt_text', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Media',
                'ordering': ['-is_featured', 'uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterSubscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('confirmation_token', models.CharField(blank=True, max_length=64)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('preferences', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveSmallIntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='tag_images/')),
                ('is_featured', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['slug'], name='news_tag_slug_4142b7_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=django.contrib.postgres.indexes.GinIndex(fields=['name'], name='news_tag_name_4deb51_gin'),
        ),
        migrations.AddField(
            model_name='rating',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='news.article'),
        ),
        migrations.AddField(
            model_name='rating',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_ratings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='newslettersubscriber',
            index=models.Index(fields=['email'], name='news_newsle_email_03664d_idx'),
        ),
        migrations.AddIndex(
            model_name='newslettersubscriber',
            index=models.Index(fields=['is_active'], name='news_newsle_is_acti_08ceda_idx'),
        ),
        migrations.AddField(
            model_name='media',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='news.article'),
        ),
        migrations.AddField(
            model_name='journalist',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='journalist_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contact',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_contacts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='news.article'),
        ),
        migrations.AddField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='news.comment'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='news.category'),
        ),
        migrations.AddField(
            model_name='articleview',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='view_records', to='news.article'),
        ),
        migrations.AddField(
            model_name='articleview',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to='news.journalist'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to='news.category'),
        ),
        migrations.AddField(
            model_name='article',
            name='contributors',
            field=models.ManyToManyField(blank=True, related_name='contributed_articles', to='news.journalist'),
        ),
        migrations.AddField(
            model_name='article',
            name='related_articles',
            field=models.ManyToManyField(blank=True, to='news.article'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='articles', to='news.tag'),
        ),
        migrations.AddIndex(
            model_name='rating',
            index=models.Index(fields=['article', 'user'], name='news_rating_article_a8d696_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rating',
            unique_together={('article', 'user')},
        ),
        migrations.AddIndex(
            model_name='journalist',
            index=models.Index(fields=['is_active'], name='news_journa_is_acti_98f290_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['is_resolved', 'priority'], name='news_contac_is_reso_4cc62b_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['article', 'created_at'], name='news_commen_article_133009_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['is_approved', 'is_flagged'], name='news_commen_is_appr_0a2188_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['slug'], name='news_catego_slug_0c9c67_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=django.contrib.postgres.indexes.GinIndex(fields=['name'], name='news_catego_name_b13cbd_gin'),
        ),
        migrations.AddIndex(
            model_name='articleview',
            index=models.Index(fields=['article', 'timestamp'], name='news_articl_article_1c54e1_idx'),
        ),
        migrations.AddIndex(
            model_name='articleview',
            index=models.Index(fields=['ip_address', 'timestamp'], name='news_articl_ip_addr_fc3c21_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='articleview',
            unique_together={('article', 'ip_address', 'session_key')},
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['slug'], name='news_articl_slug_869c04_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['status', 'published_at'], name='news_articl_status_f1b279_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['is_breaking', 'is_trending', 'is_featured'], name='news_articl_is_brea_dbd354_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['content_type'], name='news_articl_content_fc01bd_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='news_articl_search__6fe81f_gin'),
        ),
    ]
